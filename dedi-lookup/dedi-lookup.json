{
  "openapi": "3.0.3",
  "info": {
    "title": "dedi",
    "description": "Decentralized Registry - Access",
    "contact": {
      "name": "Dhiway",
      "email": "finternet@dhiway.com",
      "url": "https://dhiway.com"
    },
    "license": {
      "name": "Apache 2.0"
    },
    "version": "0.1.1"
  },
  "servers": [
    {
      "url": "http://localhost:5106",
      "description": "Localhost"
    },
    {
      "url": "https://demo.lookup.dedi.global",
      "description": "Demo"
    }
  ],
  "paths": {
    "/dedi/lookup/{namespace}": {
      "get": {
        "tags": [
          "Lookup API"
        ],
        "description": "Get the latest details of the namespace. Namespace can be either the unique ID or verified domain of the entity.",
        "operationId": "getNamespaceDetails",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Namespace reference - Unique ID of the namespace or verified domain"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NamespaceLookup"
                }
              }
            }
          },
          "404": {
            "description": "Namespace Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/dedi/lookup/{namespace}/{registry_name}": {
      "get": {
        "tags": [
          "Lookup API"
        ],
        "description": "Get the latest details of the registry within a namespace",
        "operationId": "getRegistryDetails",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Namespace reference - Unique ID or verified domain"
          },
          {
            "in": "path",
            "name": "registry_name",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Name of the registry (unique within the namespace)"
          },
          {
            "name": "version",
            "in": "query",
            "description": "Version of the registry. Default is null (returns latest version)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistryLookup"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Registry Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "451": {
            "description": "Unavailable for legal reasons",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/dedi/lookup/{namespace}/{registry_name}/{record_name}": {
      "get": {
        "tags": [
          "Lookup API"
        ],
        "description": "Get the details of a specific record within a registry",
        "operationId": "getRecordDetails",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Namespace ID or verified domain"
          },
          {
            "in": "path",
            "name": "registry_name",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Name of the registry (unique within the namespace)"
          },
          {
            "in": "path",
            "name": "record_name",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Name of the record (unique within the registry)"
          },
          {
            "name": "version",
            "in": "query",
            "description": "Version of the record. Default is null (returns latest version)",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Record Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordLookup"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Record Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "451": {
            "description": "Not available for legal reasons",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/dedi/query/{namespace}": {
      "get": {
        "tags": [
          "Query API"
        ],
        "description": "Get all registries within the specified namespace",
        "operationId": "queryNamespace",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Namespace ID or verified domain"
          },
          {
            "name": "from",
            "in": "query",
            "description": "Filter by creation date (from). Default is registry creation date",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Filter by creation date (to). Default is current date",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter by registry status",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Filter by registry name (minimum 3 characters)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort results by field (ascending)",
            "schema": {
              "type": "string",
              "enum": [
                "date",
                "status",
                "name",
                "id"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Pagination offset (default: 0)",
            "schema": {
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of items per page (default: 100)",
            "schema": {
              "type": "integer",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Registries found in namespace",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NamespaceQuery"
                }
              }
            }
          },
          "204": {
            "description": "Namespace exists but no registries match query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "402": {
            "description": "Payment Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Namespace Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "451": {
            "description": "Not available for legal reasons",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/dedi/query/{namespace}/{registry_name}": {
      "get": {
        "tags": [
          "Query API"
        ],
        "description": "Get all records within the specified registry",
        "operationId": "queryRegistry",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Namespace ID or verified domain"
          },
          {
            "in": "path",
            "name": "registry_name",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Name of the registry"
          },
          {
            "name": "version",
            "in": "query",
            "description": "Version of the registry. Default is null (returns latest version)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Filter by creation date (from). Default is record creation date",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Filter by creation date (to). Default is current date",
            "schema": {
              "type": "string",
              "format": "date"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter by record status",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Filter by record name (minimum 3 characters)",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort results by field (ascending)",
            "schema": {
              "type": "string",
              "enum": [
                "date",
                "status",
                "name",
                "id"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Pagination offset (default: 0)",
            "schema": {
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of items per page (default: 100)",
            "schema": {
              "type": "integer",
              "default": 100
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Records found in registry",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistryQuery"
                }
              }
            }
          },
          "204": {
            "description": "Registry exists but no records match query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "402": {
            "description": "Payment Required",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Registry Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "451": {
            "description": "Not available for legal reasons",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/dedi/versions/{namespace}/{registry_name}/{record_name}": {
      "get": {
        "tags": [
          "Version API"
        ],
        "description": "Get all versions of a specific record",
        "operationId": "getRecordVersions",
        "parameters": [
          {
            "in": "path",
            "name": "namespace",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Namespace ID or verified domain"
          },
          {
            "in": "path",
            "name": "registry_name",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Name of the registry"
          },
          {
            "in": "path",
            "name": "record_name",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Name of the record"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response with version information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecordVersionLookup"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Record Not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "423": {
            "description": "Locked",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "451": {
            "description": "Not available for legal reasons",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "501": {
            "description": "Method not implemented",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "NamespaceLookup": {
        "type": "object",
        "description": "Namespace details",
        "properties": {
          "namespace": {
            "type": "string",
            "description": "Namespace name or domain"
          },
          "namespace_id": {
            "type": "string",
            "description": "Unique namespace identifier"
          },
          "description": {
            "type": "string",
            "description": "Namespace description"
          },
          "created_by": {
            "type": "string",
            "description": "Creator of the namespace"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          },
          "registry_count": {
            "type": "integer",
            "description": "Number of registries in this namespace"
          }
        }
      },
      "RegistryLookup": {
        "type": "object",
        "description": "Registry details",
        "properties": {
          "namespace": {
            "type": "string",
            "description": "Namespace name or domain"
          },
          "namespace_id": {
            "type": "string",
            "description": "Unique namespace identifier"
          },
          "registry_id": {
            "type": "string",
            "description": "Unique registry identifier"
          },
          "registry_name": {
            "type": "string",
            "description": "Registry name (unique within namespace)"
          },
          "description": {
            "type": "string",
            "description": "Registry description"
          },
          "created_by": {
            "type": "string",
            "description": "Creator of the registry"
          },
          "schema": {
            "type": "object",
            "description": "Schema definition for records in this registry"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          },
          "record_count": {
            "type": "integer",
            "description": "Number of records in this registry"
          },
          "version_count": {
            "type": "integer",
            "description": "Number of versions across all records"
          },
          "query_allowed": {
            "type": "boolean",
            "description": "Indicates if query operations are permitted"
          }
        },
        "required": [
          "registry_id",
          "registry_name",
          "description",
          "created_by",
          "schema",
          "created_at"
        ]
      },
      "NamespaceQuery": {
        "type": "object",
        "description": "Namespace query results",
        "properties": {
          "created_by": {
            "type": "string",
            "description": "Namespace creator"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Namespace creation timestamp"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Namespace last update timestamp"
          },
          "total_registries": {
            "type": "integer",
            "description": "Total number of registries matching query"
          },
          "registries": {
            "type": "array",
            "description": "List of registries",
            "items": {
              "type": "object",
              "properties": {
                "registry_id": {
                  "type": "string"
                },
                "registry_name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          "page": {
            "type": "integer",
            "description": "Current page number"
          },
          "page_size": {
            "type": "integer",
            "description": "Number of items per page"
          }
        }
      },
      "RegistryQuery": {
        "type": "object",
        "description": "Registry query results",
        "properties": {
          "created_by": {
            "type": "string",
            "description": "Registry creator"
          },
          "schema": {
            "type": "object",
            "description": "Registry schema definition"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Registry creation timestamp"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Registry last update timestamp"
          },
          "total_records": {
            "type": "integer",
            "description": "Total number of records matching query"
          },
          "records": {
            "type": "array",
            "description": "List of records",
            "items": {
              "type": "object",
              "properties": {
                "record_id": {
                  "type": "string"
                },
                "record_name": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                },
                "created_at": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          },
          "page": {
            "type": "integer",
            "description": "Current page number"
          },
          "page_size": {
            "type": "integer",
            "description": "Number of items per page"
          }
        }
      },
      "RecordLookup": {
        "type": "object",
        "description": "Record details",
        "properties": {
          "namespace": {
            "type": "string",
            "description": "Namespace name or domain"
          },
          "namespace_id": {
            "type": "string",
            "description": "Unique namespace identifier"
          },
          "registry_id": {
            "type": "string",
            "description": "Unique registry identifier"
          },
          "registry_name": {
            "type": "string",
            "description": "Registry name"
          },
          "record_id": {
            "type": "string",
            "description": "Unique record identifier"
          },
          "record_name": {
            "type": "string",
            "description": "Record name (unique within registry)"
          },
          "description": {
            "type": "string",
            "description": "Record description"
          },
          "schema": {
            "type": "object",
            "description": "Schema definition for this record"
          },
          "details": {
            "type": "object",
            "description": "Record data according to schema"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          },
          "last_updated_at": {
            "type": "string",
            "format": "date-time",
            "description": "Last update timestamp"
          },
          "created_by": {
            "type": "string",
            "description": "Creator of the record"
          }
        },
        "required": [
          "record_id",
          "record_name",
          "details",
          "created_at",
          "created_by"
        ]
      },
      "RecordVersionLookup": {
        "type": "object",
        "description": "Record version information",
        "properties": {
          "record_id": {
            "type": "string",
            "description": "Unique record identifier"
          },
          "record_name": {
            "type": "string",
            "description": "Record name"
          },
          "total_versions": {
            "type": "integer",
            "description": "Total number of versions",
            "default": 1
          },
          "versions": {
            "type": "array",
            "description": "List of all versions",
            "items": {
              "type": "array",
              "default": "e3b0c44298fc1c149afbae41e4649b934ca495991b7852b855"
            }
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "description": "Standard error response",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error type"
          },
          "description": {
            "type": "string",
            "description": "Detailed error description"
          },
          "code": {
            "type": "string",
            "description": "Error code"
          }
        }
      }
    },
    "examples": {
      "ErrorResponseExample400": {
        "value": {
          "error": "Bad Request",
          "description": "Invalid query parameters",
          "code": "400"
        }
      },
      "ErrorResponseExample401": {
        "value": {
          "error": "Unauthorized",
          "description": "Authentication required",
          "code": "401"
        }
      },
      "ErrorResponseExample402": {
        "value": {
          "error": "Payment Required",
          "description": "Payment required to access this resource",
          "code": "402"
        }
      },
      "ErrorResponseExample404": {
        "value": {
          "error": "Not Found",
          "description": "The requested resource was not found",
          "code": "404"
        }
      },
      "ErrorResponseExample423": {
        "value": {
          "error": "Locked",
          "description": "Resource is locked by the owner",
          "code": "423"
        }
      },
      "ErrorResponseExample451": {
        "value": {
          "error": "Unavailable for Legal Reasons",
          "description": "Access restricted for legal reasons",
          "code": "451"
        }
      }
    }
  }
}
