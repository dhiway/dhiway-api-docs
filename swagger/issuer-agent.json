{
  "openapi": "3.0.1",
  "info": {
    "version": "1.4.1",
    "title": "Issuer Agent",
    "description": "API for managing profiles, registries, and verifiable credentials in a wallet agent.",
    "termsOfService": "http://studio.dhiway.com/page/terms-and-conditions",
    "contact": {
      "name": "Dhiway Networks",
      "email": "info@dhiway.com",
      "url": "https://dhiway.com"
    },
    "license": {
      "name": "Apache v2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0"
    }
  },
  "servers": [
    {
      "url": "https://issuer-agent-api.demo.dhiway.net",
      "description": "Demo server"
    },
    {
      "url": "http://localhost:5106/",
      "description": "Local server"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/api/v1/profile/create": {
      "post": {
        "tags": ["Profile"],
        "description": "Create a new profile on the blockchain, generate a new account, fund it, and save it to the database. The profile includes a public name and is associated with a new account address.",
        "operationId": "createProfile",
        "requestBody": {
          "description": "Optional profile data (defaults to a public name of \"Issuer\").",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProfileRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "201": {
            "description": "Profile created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateProfileResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error during profile creation, such as account creation, funding, or database failure.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/profile/{address}": {
      "get": {
        "tags": ["Profile"],
        "description": "Retrieve a profile by its account address from the blockchain (cached in Redis) or database.",
        "operationId": "getProfile",
        "parameters": [
          {
            "in": "path",
            "name": "address",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Account address associated with the profile (e.g., 3wUT5V1yMX2YcBvn8NmxNz4yjQGh437FNnvbzN4sBM5bZafM)."
          }
        ],
        "responses": {
          "200": {
            "description": "Profile found with details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfileResponse"
                }
              }
            }
          },
          "400": {
            "description": "Missing or invalid address.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Profile not found for the given address.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetProfileResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error during profile retrieval.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/profile/cache/stats": {
      "get": {
        "tags": ["Profile"],
        "description": "Retrieve Redis cache statistics for profile lookups, including cache hits, misses, and hit rate.",
        "operationId": "getCacheStats",
        "responses": {
          "200": {
            "description": "Cache statistics retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CacheStatsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error during cache stats retrieval, such as Redis connection failure.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/create": {
      "post": {
        "tags": ["Registry"],
        "description": "Create a new registry on the blockchain with a schema and issuer address, saving it to the database.",
        "operationId": "createRegistry",
        "requestBody": {
          "description": "Registry details including schema and issuer address.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistryRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Registry created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid issuer address or missing schema.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error during registry creation, such as blockchain or database failure.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/registry/{id}": {
      "get": {
        "tags": ["Registry"],
        "description": "Retrieve a registry by its unique identifier from the database.",
        "operationId": "getRegistry",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Unique identifier of the registry (e.g., JCfANQxGJm8eoVrYD32TFEAfUkQjTeQMFdcdMreTtUvKgYnazeoV)."
          }
        ],
        "responses": {
          "200": {
            "description": "Registry retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetRegistryResponse"
                }
              }
            }
          },
          "400": {
            "description": "Missing or invalid registry ID.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Registry not found for the given ID.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error during registry retrieval.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cred": {
      "post": {
        "tags": ["Verifiable Credential"],
        "description": "Issue a new verifiable credential (VC) to a specified holder using a predefined schema. The VC is registered on the blockchain and stored in the database.",
        "operationId": "issueCred",
        "requestBody": {
          "description": "Details required to issue the VC, either as a credential object (with schemaId/cordSchemaId and credentialSubject) or directly with schema, properties, and address, plus optional validity timestamps and metadata.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecordRequest"
              },
              "example": {
                "address": "3wUT5V1yMX2YcBvn8NmxNz4yjQGh437FNnvbzN4sBM5bZafM",
                "schema": {
                  "title": "test_schema",
                  "description": "test_schema",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    }
                  },
                  "required": ["name", "email"]
                },
                "properties": {
                  "name": "redbull",
                  "email": "demo22@gmail.com"
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Verifiable credential issued successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CredResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data, missing required fields (e.g., schemaId/cordSchemaId, credentialSubject, schema, properties, address), or registry not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error during credential issuance, such as schema mismatch or blockchain registration failure.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cred/{id}": {
      "get": {
        "tags": ["Verifiable Credential"],
        "description": "Retrieve a verifiable credential by its unique identifier from the database.",
        "operationId": "getCredById",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string"
            },
            "required": true,
            "description": "Unique identifier of the credential (e.g., JCfQSTYmdRZimHU3aBDyT1UwiRxRSGNkLqmzYz3MAC6Wsv8bcKrg)."
          }
        ],
        "responses": {
          "200": {
            "description": "Credential retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCredResponse"
                }
              }
            }
          },
          "400": {
            "description": "Missing or invalid credential ID, or credential not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error during credential retrieval.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cred/update": {
      "put": {
        "tags": ["Verifiable Credential"],
        "description": "Update the properties of an existing verifiable credential identified by its unique credId. The updated credential is re-signed and registered on the blockchain.",
        "operationId": "updateCred",
        "requestBody": {
          "description": "Credential ID and updated properties (e.g., name, email) with optional metadata.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Credential updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CredUpdateResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request data (e.g., missing credId or properties) or credential not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error during credential update, such as blockchain registration failure.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/cred/revoke": {
      "post": {
        "tags": ["Verifiable Credential"],
        "description": "Revoke a verifiable credential by its unique credId, marking it as inactive on the blockchain.",
        "operationId": "revokeCred",
        "requestBody": {
          "description": "Credential ID of the VC to revoke.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "credId": {
                    "type": "string",
                    "description": "Unique identifier of the credential to revoke.",
                    "example": "JCfQSTYmdRZimHU3aBDyT1UwiRxRSGNkLqmzYz3MAC6Wsv8bcKrg"
                  }
                },
                "required": ["credId"]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Credential revoked successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "result": {
                      "type": "string",
                      "description": "Indicates the revocation was successful.",
                      "example": "Statement revoked successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing or invalid credential ID, credential not found, or invalid issuer account.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error during credential revocation.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error message describing the issue.",
            "example": "Invalid request data"
          }
        }
      },
      "RecordRequest": {
        "oneOf": [
          {
            "type": "object",
            "properties": {
              "credential": {
                "type": "object",
                "properties": {
                  "schemaId": {
                    "type": "string",
                    "description": "Identifier of the schema used to issue the credential (alternative to cordSchemaId).",
                    "example": "schema:cord:s34ouTR2XCJprL48EbkyhNV4SSsbQU9JGN4KhJbAerz6wEVWC"
                  },
                  "cordSchemaId": {
                    "type": "string",
                    "description": "Alternative identifier of the schema used to issue the credential.",
                    "example": "schema:cord:s34ouTR2XCJprL48EbkyhNV4SSsbQU9JGN4KhJbAerz6wEVWC"
                  },
                  "credentialSubject": {
                    "type": "object",
                    "description": "Credential subject containing holder information and other properties.",
                    "properties": {
                      "name": {
                        "type": "string",
                        "example": "redbull"
                      },
                      "email": {
                        "type": "string",
                        "example": "demo22@gmail.com"
                      },
                      "id": {
                        "type": "string",
                        "description": "DID of the credential holder.",
                        "example": "did:web:did.myn.social:JCeFE93PWqXz6UygdVTHAstRcR2MyrnehGsHgbrL7dt9N8WmP5m4"
                      }
                    },
                    "additionalProperties": true
                  },
                  "validFrom": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date and time from which the credential is valid.",
                    "example": "2025-07-04T05:52:00.000Z"
                  },
                  "validUntil": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The date and time until which the credential is valid.",
                    "example": "2026-07-04T05:52:00.000Z"
                  },
                  "address": {
                    "type": "string",
                    "description": "Issuer account address.",
                    "example": "3wUT5V1yMX2YcBvn8NmxNz4yjQGh437FNnvbzN4sBM5bZafM"
                  }
                },
                "required": ["credentialSubject", "address"],
                "oneOf": [
                  { "required": ["schemaId"] },
                  { "required": ["cordSchemaId"] }
                ]
              }
            },
            "required": ["credential"]
          },
          {
            "type": "object",
            "properties": {
              "schema": {
                "type": "object",
                "description": "Schema used to issue the credential.",
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "test_schema"
                  },
                  "description": {
                    "type": "string",
                    "example": "test_schema"
                  },
                  "properties": {
                    "type": "object",
                    "description": "Properties of the schema.",
                    "additionalProperties": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    }
                  },
                  "required": {
                    "type": "array",
                    "description": "Required fields in the schema.",
                    "items": {
                      "type": "string"
                    },
                    "example": ["name", "email"]
                  }
                }
              },
              "properties": {
                "type": "object",
                "description": "Credential properties including holder information.",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "redbull"
                  },
                  "email": {
                    "type": "string",
                    "example": "demo22@gmail.com"
                  }
                },
                "additionalProperties": true
              },
              "address": {
                "type": "string",
                "description": "Issuer account address.",
                "example": "3wUT5V1yMX2YcBvn8NmxNz4yjQGh437FNnvbzN4sBM5bZafM"
              },
              "validFrom": {
                "type": "string",
                "format": "date-time",
                "description": "The date and time from which the credential is valid.",
                "example": "2025-07-04T05:52:00.000Z"
              },
              "validUntil": {
                "type": "string",
                "format": "date-time",
                "description": "The date and time until which the credential is valid.",
                "example": "2026-07-04T05:52:00.000Z"
              },
              "metadata": {
                "type": "object",
                "description": "Optional metadata for the credential.",
                "additionalProperties": true,
                "example": {}
              }
            },
            "required": ["schema", "properties", "address"]
          }
        ]
      },
      "CredResponse": {
        "type": "object",
        "properties": {
          "result": {
            "type": "string",
            "description": "Indicates the operation was successful.",
            "example": "success"
          },
          "credId": {
            "type": "string",
            "description": "The unique identifier of the issued credential.",
            "example": "JCfQSTYmdRZimHU3aBDyT1UwiRxRSGNkLqmzYz3MAC6Wsv8bcKrg"
          },
          "vc": {
            "type": "object",
            "description": "The verifiable credential object, including proof and content.",
            "properties": {
              "@context": {
                "type": "array",
                "description": "Context URIs for the credential.",
                "items": {
                  "type": "string"
                },
                "example": [
                  "https://www.w3.org/2018/credentials/v1",
                  "https://cord.network/2023/cred/v1"
                ]
              },
              "type": {
                "type": "array",
                "description": "Types of the credential.",
                "items": {
                  "type": "string"
                },
                "example": ["VerifiableCredential"]
              },
              "issuer": {
                "type": "string",
                "description": "DID of the issuer.",
                "example": "did:web:did.myn.social:JCeFE93PWqXz6UygdVTHAstRcR2MyrnehGsHgbrL7dt9N8WmP5m4"
              },
              "issuanceDate": {
                "type": "string",
                "format": "date-time",
                "description": "The date and time when the credential was issued.",
                "example": "2025-07-04T05:52:00.000Z"
              },
              "expirationDate": {
                "type": "string",
                "format": "date-time",
                "description": "The date and time until which the credential is valid.",
                "example": "2026-07-04T05:52:00.000Z"
              },
              "credentialSubject": {
                "type": "object",
                "description": "Credential subject containing holder information and other properties.",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "redbull"
                  },
                  "email": {
                    "type": "string",
                    "example": "demo22@gmail.com"
                  },
                  "id": {
                    "type": "string",
                    "description": "DID of the credential holder.",
                    "example": "did:web:did.myn.social:JCeFE93PWqXz6UygdVTHAstRcR2MyrnehGsHgbrL7dt9N8WmP5m4"
                  },
                  "@context": {
                    "type": "string",
                    "description": "Context URI for the credential subject.",
                    "example": "https://cord.network/2023/cred/v1"
                  }
                },
                "additionalProperties": true
              },
              "validFrom": {
                "type": "string",
                "format": "date-time",
                "description": "The date and time from which the credential is valid.",
                "example": "2025-07-04T05:52:00.000Z"
              },
              "validUntil": {
                "type": "string",
                "format": "date-time",
                "description": "The date and time until which the credential is valid.",
                "example": "2026-07-04T05:52:00.000Z"
              },
              "metadata": {
                "type": "object",
                "description": "Optional metadata for the credential.",
                "additionalProperties": true,
                "example": {}
              },
              "credentialSchema": {
                "type": "object",
                "description": "Schema defining the structure of the credential.",
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "test_schema"
                  },
                  "description": {
                    "type": "string",
                    "example": "test_schema"
                  },
                  "properties": {
                    "type": "object",
                    "description": "Properties of the schema.",
                    "additionalProperties": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    }
                  },
                  "required": {
                    "type": "array",
                    "description": "Required fields in the schema.",
                    "items": {
                      "type": "string"
                    },
                    "example": ["name", "email"]
                  }
                }
              },
              "credentialHash": {
                "type": "string",
                "description": "Hash of the credential.",
                "example": "0x463daaf004d7d7ac995380df77aed48e822043d9a860daaff9cb7788a3ab242a"
              },
              "id": {
                "type": "string",
                "description": "Internal database ID of the credential.",
                "example": "e77b127c-7229-46cc-86ec-025026b9cf75"
              },
              "proof": {
                "type": "array",
                "description": "Proofs for the credential, including signature and blockchain details.",
                "items": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "Ed25519Signature2020"
                        },
                        "created": {
                          "type": "string",
                          "example": "Fri Jul 04 2025 05:52:00 GMT+0000 (Coordinated Universal Time)"
                        },
                        "proofPurpose": {
                          "type": "string",
                          "example": "sr25519"
                        },
                        "verificationMethod": {
                          "type": "string",
                          "example": "did:web:did.myn.social:JCeFE93PWqXz6UygdVTHAstRcR2MyrnehGsHgbrL7dt9N8WmP5m4#3wUT5V1yMX2YcBvn8NmxNz4yjQGh437FNnvbzN4sBM5bZafM"
                        },
                        "proofValue": {
                          "type": "string",
                          "example": "zQNaVyGSw5DYbDDZbCXzwZFHWbyfGwoWhe53J9dZYu5TRWpsa4VyLpnUTfap9NoweAZcnCKgafspSYHPJUVw5fBm"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "CordProof2025"
                        },
                        "registryId": {
                          "type": "string",
                          "example": "JCfANQxGJm8eoVrYD32TFEAfUkQjTeQMFdcdMreTtUvKgYnazeoV"
                        },
                        "issuerAddress": {
                          "type": "string",
                          "example": "3wUT5V1yMX2YcBvn8NmxNz4yjQGh437FNnvbzN4sBM5bZafM"
                        },
                        "tx_hash": {
                          "type": "string",
                          "example": "0x463daaf004d7d7ac995380df77aed48e822043d9a860daaff9cb7788a3ab242a"
                        },
                        "genesisHash": {
                          "type": "string",
                          "example": "0xc03c1ef5924e216c12893e8ecbe556692e5300be5cddba913e05d17e885c7d1d"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "CordSDRProof2025"
                        },
                        "defaultDigest": {
                          "type": "string",
                          "example": "0xf0f6d32c909fcaf469316f3bcccd48de1cea87d1c52ae66e05e8f9a7b24ec0c6"
                        },
                        "hashes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "0x75b6c6239b6b978e2002c28b3f2ebd3660cbd3f3bed315f1541361077c78e6b2",
                            "0xa89b615d7901156832ca212dec90526e7548126b1da4a14872c2264d484917e6",
                            "0xca4031868e4f0f28f6db96fae8d325e3db5fa0329159874129a516735d71806a"
                          ]
                        },
                        "nonceMap": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "example": {
                            "0x44c37c75f757f135472d7d87233a33d7a92fb1dc466c9b5694016345f42b3953": "5e2d10d7-8cb0-4bcf-8ec8-9fec1df4df4a",
                            "0xd612b758d290f17ad7dd1324e55d70a3a503b5221866c64672f5bc4b7a26689d": "c98f76d1-7d4c-46a5-916c-5f17c1eb42cc",
                            "0x719bfd70a953da9a12498cf6a876aa5816036e0ca69caca4a485e52aa4a9d398": "a5047285-052f-48fd-b0f7-d88dbd06083b"
                          }
                        },
                        "genesisHash": {
                          "type": "string",
                          "example": "0xc03c1ef5924e216c12893e8ecbe556692e5300be5cddba913e05d17e885c7d1d"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "GetCredResponse": {
        "type": "object",
        "properties": {
          "credential": {
            "allOf": [
              { "$ref": "#/components/schemas/Credential" },
              {
                "type": "object",
                "description": "The stored credential object, including schemaId, identifier, fromDid, credHash, vc, and active status."
              }
            ]
          }
        }
      },
      "Credential": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Internal database ID of the credential.",
            "example": "e77b127c-7229-46cc-86ec-025026b9cf75"
          },
          "credId": {
            "type": "string",
            "description": "Unique identifier of the credential on the blockchain.",
            "example": "JCfQSTYmdRZimHU3aBDyT1UwiRxRSGNkLqmzYz3MAC6Wsv8bcKrg"
          },
          "address": {
            "type": "string",
            "description": "Issuer account address.",
            "example": "3wUT5V1yMX2YcBvn8NmxNz4yjQGh437FNnvbzN4sBM5bZafM"
          },
          "profileId": {
            "type": "string",
            "description": "Profile ID associated with the issuer.",
            "example": "JCeFE93PWqXz6UygdVTHAstRcR2MyrnehGsHgbrL7dt9N8WmP5m4"
          },
          "registryId": {
            "type": "string",
            "description": "Registry ID associated with the credential.",
            "example": "JCfANQxGJm8eoVrYD32TFEAfUkQjTeQMFdcdMreTtUvKgYnazeoV"
          },
          "issuerDid": {
            "type": "string",
            "description": "DID of the issuer.",
            "example": "did:web:did.myn.social:JCeFE93PWqXz6UygdVTHAstRcR2MyrnehGsHgbrL7dt9N8WmP5m4"
          },
          "holderDid": {
            "type": "string",
            "description": "DID of the credential holder.",
            "example": "did:web:did.myn.social:JCeFE93PWqXz6UygdVTHAstRcR2MyrnehGsHgbrL7dt9N8WmP5m4"
          },
          "vc": {
            "type": "object",
            "description": "The verifiable credential object, including proof and content.",
            "properties": {
              "@context": {
                "type": "array",
                "description": "Context URIs for the credential.",
                "items": {
                  "type": "string"
                },
                "example": [
                  "https://www.w3.org/2018/credentials/v1",
                  "https://cord.network/2023/cred/v1"
                ]
              },
              "type": {
                "type": "array",
                "description": "Types of the credential.",
                "items": {
                  "type": "string"
                },
                "example": ["VerifiableCredential"]
              },
              "issuer": {
                "type": "string",
                "description": "DID of the issuer.",
                "example": "did:web:did.myn.social:JCeFE93PWqXz6UygdVTHAstRcR2MyrnehGsHgbrL7dt9N8WmP5m4"
              },
              "issuanceDate": {
                "type": "string",
                "format": "date-time",
                "description": "The date and time when the credential was issued.",
                "example": "2025-07-04T05:52:00.000Z"
              },
              "expirationDate": {
                "type": "string",
                "format": "date-time",
                "description": "The date and time until which the credential is valid.",
                "example": "2026-07-04T05:52:00.000Z"
              },
              "credentialSubject": {
                "type": "object",
                "description": "Credential subject containing holder information and other properties.",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "redbull"
                  },
                  "email": {
                    "type": "string",
                    "example": "demo22@gmail.com"
                  },
                  "id": {
                    "type": "string",
                    "description": "DID of the credential holder.",
                    "example": "did:web:did.myn.social:JCeFE93PWqXz6UygdVTHAstRcR2MyrnehGsHgbrL7dt9N8WmP5m4"
                  },
                  "@context": {
                    "type": "string",
                    "description": "Context URI for the credential subject.",
                    "example": "https://cord.network/2023/cred/v1"
                  }
                },
                "additionalProperties": true
              },
              "validFrom": {
                "type": "string",
                "format": "date-time",
                "description": "The date and time from which the credential is valid.",
                "example": "2025-07-04T05:52:00.000Z"
              },
              "validUntil": {
                "type": "string",
                "format": "date-time",
                "description": "The date and time until which the credential is valid.",
                "example": "2026-07-04T05:52:00.000Z"
              },
              "metadata": {
                "type": "object",
                "description": "Optional metadata for the credential.",
                "additionalProperties": true,
                "example": {}
              },
              "credentialSchema": {
                "type": "object",
                "description": "Schema defining the structure of the credential.",
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "test_schema"
                  },
                  "description": {
                    "type": "string",
                    "example": "test_schema"
                  },
                  "properties": {
                    "type": "object",
                    "description": "Properties of the schema.",
                    "additionalProperties": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    }
                  },
                  "required": {
                    "type": "array",
                    "description": "Required fields in the schema.",
                    "items": {
                      "type": "string"
                    },
                    "example": ["name", "email"]
                  }
                }
              },
              "credentialHash": {
                "type": "string",
                "description": "Hash of the credential.",
                "example": "0x463daaf004d7d7ac995380df77aed48e822043d9a860daaff9cb7788a3ab242a"
              },
              "id": {
                "type": "string",
                "description": "Internal database ID of the credential.",
                "example": "e77b127c-7229-46cc-86ec-025026b9cf75"
              },
              "proof": {
                "type": "array",
                "description": "Proofs for the credential, including signature and blockchain details.",
                "items": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "Ed25519Signature2020"
                        },
                        "created": {
                          "type": "string",
                          "example": "Fri Jul 04 2025 05:52:00 GMT+0000 (Coordinated Universal Time)"
                        },
                        "proofPurpose": {
                          "type": "string",
                          "example": "sr25519"
                        },
                        "verificationMethod": {
                          "type": "string",
                          "example": "did:web:did.myn.social:JCeFE93PWqXz6UygdVTHAstRcR2MyrnehGsHgbrL7dt9N8WmP5m4#3wUT5V1yMX2YcBvn8NmxNz4yjQGh437FNnvbzN4sBM5bZafM"
                        },
                        "proofValue": {
                          "type": "string",
                          "example": "zQNaVyGSw5DYbDDZbCXzwZFHWbyfGwoWhe53J9dZYu5TRWpsa4VyLpnUTfap9NoweAZcnCKgafspSYHPJUVw5fBm"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "CordProof2025"
                        },
                        "registryId": {
                          "type": "string",
                          "example": "JCfANQxGJm8eoVrYD32TFEAfUkQjTeQMFdcdMreTtUvKgYnazeoV"
                        },
                        "issuerAddress": {
                          "type": "string",
                          "example": "3wUT5V1yMX2YcBvn8NmxNz4yjQGh437FNnvbzN4sBM5bZafM"
                        },
                        "tx_hash": {
                          "type": "string",
                          "example": "0x463daaf004d7d7ac995380df77aed48e822043d9a860daaff9cb7788a3ab242a"
                        },
                        "genesisHash": {
                          "type": "string",
                          "example": "0xc03c1ef5924e216c12893e8ecbe556692e5300be5cddba913e05d17e885c7d1d"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "CordSDRProof2025"
                        },
                        "defaultDigest": {
                          "type": "string",
                          "example": "0xf0f6d32c909fcaf469316f3bcccd48de1cea87d1c52ae66e05e8f9a7b24ec0c6"
                        },
                        "hashes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "0x75b6c6239b6b978e2002c28b3f2ebd3660cbd3f3bed315f1541361077c78e6b2",
                            "0xa89b615d7901156832ca212dec90526e7548126b1da4a14872c2264d484917e6",
                            "0xca4031868e4f0f28f6db96fae8d325e3db5fa0329159874129a516735d71806a"
                          ]
                        },
                        "nonceMap": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "example": {
                            "0x44c37c75f757f135472d7d87233a33d7a92fb1dc466c9b5694016345f42b3953": "5e2d10d7-8cb0-4bcf-8ec8-9fec1df4df4a",
                            "0xd612b758d290f17ad7dd1324e55d70a3a503b5221866c64672f5bc4b7a26689d": "c98f76d1-7d4c-46a5-916c-5f17c1eb42cc",
                            "0x719bfd70a953da9a12498cf6a876aa5816036e0ca69caca4a485e52aa4a9d398": "a5047285-052f-48fd-b0f7-d88dbd06083b"
                          }
                        },
                        "genesisHash": {
                          "type": "string",
                          "example": "0xc03c1ef5924e216c12893e8ecbe556692e5300be5cddba913e05d17e885c7d1d"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "CredUpdateResponse": {
        "type": "object",
        "properties": {
          "result": {
            "type": "string",
            "description": "Indicates the operation was successful.",
            "example": "Updated successfully"
          },
          "credId": {
            "type": "string",
            "description": "The unique identifier of the updated credential.",
            "example": "JCfQSTYmdRZimHU3aBDyT1UwiRxRSGNkLqmzYz3MAC6Wsv8bcKrg"
          },
          "vc": {
            "type": "object",
            "description": "The updated verifiable credential object, including proof and content.",
            "properties": {
              "@context": {
                "type": "array",
                "description": "Context URIs for the credential.",
                "items": {
                  "type": "string"
                },
                "example": [
                  "https://www.w3.org/2018/credentials/v1",
                  "https://cord.network/2023/cred/v1"
                ]
              },
              "type": {
                "type": "array",
                "description": "Types of the credential.",
                "items": {
                  "type": "string"
                },
                "example": ["VerifiableCredential"]
              },
              "issuer": {
                "type": "string",
                "description": "DID of the issuer.",
                "example": "did:web:did.myn.social:JCeFE93PWqXz6UygdVTHAstRcR2MyrnehGsHgbrL7dt9N8WmP5m4"
              },
              "issuanceDate": {
                "type": "string",
                "format": "date-time",
                "description": "The date and time when the credential was issued.",
                "example": "2025-07-04T05:52:00.000Z"
              },
              "expirationDate": {
                "type": "string",
                "format": "date-time",
                "description": "The date and time until which the credential is valid.",
                "example": "2026-07-04T05:52:00.000Z"
              },
              "credentialSubject": {
                "type": "object",
                "description": "Credential subject containing holder information and other properties.",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "redbull"
                  },
                  "email": {
                    "type": "string",
                    "example": "demo22@gmail.com"
                  },
                  "id": {
                    "type": "string",
                    "description": "DID of the credential holder.",
                    "example": "did:web:did.myn.social:JCeFE93PWqXz6UygdVTHAstRcR2MyrnehGsHgbrL7dt9N8WmP5m4"
                  },
                  "@context": {
                    "type": "string",
                    "description": "Context URI for the credential subject.",
                    "example": "https://cord.network/2023/cred/v1"
                  }
                },
                "additionalProperties": true
              },
              "validFrom": {
                "type": "string",
                "format": "date-time",
                "description": "The date and time from which the credential is valid.",
                "example": "2025-07-04T05:52:00.000Z"
              },
              "validUntil": {
                "type": "string",
                "format": "date-time",
                "description": "The date and time until which the credential is valid.",
                "example": "2026-07-04T05:52:00.000Z"
              },
              "metadata": {
                "type": "object",
                "description": "Optional metadata for the credential.",
                "additionalProperties": true,
                "example": {}
              },
              "credentialSchema": {
                "type": "object",
                "description": "Schema defining the structure of the credential.",
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "test_schema"
                  },
                  "description": {
                    "type": "string",
                    "example": "test_schema"
                  },
                  "properties": {
                    "type": "object",
                    "description": "Properties of the schema.",
                    "additionalProperties": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    }
                  },
                  "required": {
                    "type": "array",
                    "description": "Required fields in the schema.",
                    "items": {
                      "type": "string"
                    },
                    "example": ["name", "email"]
                  }
                }
              },
              "credentialHash": {
                "type": "string",
                "description": "Hash of the credential.",
                "example": "0x463daaf004d7d7ac995380df77aed48e822043d9a860daaff9cb7788a3ab242a"
              },
              "id": {
                "type": "string",
                "description": "Internal database ID of the credential.",
                "example": "e77b127c-7229-46cc-86ec-025026b9cf75"
              },
              "proof": {
                "type": "array",
                "description": "Proofs for the credential, including signature and blockchain details.",
                "items": {
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "Ed25519Signature2020"
                        },
                        "created": {
                          "type": "string",
                          "example": "Fri Jul 04 2025 05:52:00 GMT+0000 (Coordinated Universal Time)"
                        },
                        "proofPurpose": {
                          "type": "string",
                          "example": "sr25519"
                        },
                        "verificationMethod": {
                          "type": "string",
                          "example": "did:web:did.myn.social:JCeFE93PWqXz6UygdVTHAstRcR2MyrnehGsHgbrL7dt9N8WmP5m4#3wUT5V1yMX2YcBvn8NmxNz4yjQGh437FNnvbzN4sBM5bZafM"
                        },
                        "proofValue": {
                          "type": "string",
                          "example": "zQNaVyGSw5DYbDDZbCXzwZFHWbyfGwoWhe53J9dZYu5TRWpsa4VyLpnUTfap9NoweAZcnCKgafspSYHPJUVw5fBm"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "CordProof2025"
                        },
                        "registryId": {
                          "type": "string",
                          "example": "JCfANQxGJm8eoVrYD32TFEAfUkQjTeQMFdcdMreTtUvKgYnazeoV"
                        },
                        "issuerAddress": {
                          "type": "string",
                          "example": "3wUT5V1yMX2YcBvn8NmxNz4yjQGh437FNnvbzN4sBM5bZafM"
                        },
                        "tx_hash": {
                          "type": "string",
                          "example": "0x463daaf004d7d7ac995380df77aed48e822043d9a860daaff9cb7788a3ab242a"
                        },
                        "genesisHash": {
                          "type": "string",
                          "example": "0xc03c1ef5924e216c12893e8ecbe556692e5300be5cddba913e05d17e885c7d1d"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "CordSDRProof2025"
                        },
                        "defaultDigest": {
                          "type": "string",
                          "example": "0xf0f6d32c909fcaf469316f3bcccd48de1cea87d1c52ae66e05e8f9a7b24ec0c6"
                        },
                        "hashes": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "0x75b6c6239b6b978e2002c28b3f2ebd3660cbd3f3bed315f1541361077c78e6b2",
                            "0xa89b615d7901156832ca212dec90526e7548126b1da4a14872c2264d484917e6",
                            "0xca4031868e4f0f28f6db96fae8d325e3db5fa0329159874129a516735d71806a"
                          ]
                        },
                        "nonceMap": {
                          "type": "object",
                          "additionalProperties": {
                            "type": "string"
                          },
                          "example": {
                            "0x44c37c75f757f135472d7d87233a33d7a92fb1dc466c9b5694016345f42b3953": "5e2d10d7-8cb0-4bcf-8ec8-9fec1df4df4a",
                            "0xd612b758d290f17ad7dd1324e55d70a3a503b5221866c64672f5bc4b7a26689d": "c98f76d1-7d4c-46a5-916c-5f17c1eb42cc",
                            "0x719bfd70a953da9a12498cf6a876aa5816036e0ca69caca4a485e52aa4a9d398": "a5047285-052f-48fd-b0f7-d88dbd06083b"
                          }
                        },
                        "genesisHash": {
                          "type": "string",
                          "example": "0xc03c1ef5924e216c12893e8ecbe556692e5300be5cddba913e05d17e885c7d1d"
                        }
                      }
                    }
                  ]
                }
              }
            }
          }
        }
      },
      "UpdateRequest": {
        "type": "object",
        "properties": {
          "credId": {
            "type": "string",
            "description": "Unique identifier of the credential to update.",
            "example": "JCfQSTYmdRZimHU3aBDyT1UwiRxRSGNkLqmzYz3MAC6Wsv8bcKrg"
          },
          "properties": {
            "type": "object",
            "description": "Updated credential properties.",
            "properties": {
              "name": {
                "type": "string",
                "example": "redbull"
              },
              "email": {
                "type": "string",
                "example": "demo22@gmail.com"
              },
              "id": {
                "type": "string",
                "description": "DID of the credential holder.",
                "example": "did:web:did.myn.social:JCeFE93PWqXz6UygdVTHAstRcR2MyrnehGsHgbrL7dt9N8WmP5m4"
              }
            },
            "additionalProperties": true
          },
          "metadata": {
            "type": "object",
            "description": "Optional metadata for the updated credential.",
            "additionalProperties": true
          }
        },
        "required": ["credId", "properties"]
      },
      "ProfileRequest": {
        "type": "object",
        "properties": {
          "pub_name": {
            "type": "string",
            "description": "Public name for the profile (defaults to \"Issuer\" if not provided).",
            "example": "Issuer"
          }
        }
      },
      "CreateProfileResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Indicates the profile creation was successful.",
            "example": "Profile created successfully"
          },
          "profileId": {
            "type": "string",
            "description": "Unique identifier of the created profile.",
            "example": "JCeFE93PWqXz6UygdVTHAstRcR2MyrnehGsHgbrL7dt9N8WmP5m4"
          },
          "address": {
            "type": "string",
            "description": "Account address associated with the profile.",
            "example": "3wUT5V1yMX2YcBvn8NmxNz4yjQGh437FNnvbzN4sBM5bZafM"
          },
          "publicKey": {
            "type": "string",
            "description": "Public key of the account in hexadecimal format.",
            "example": "0x74ef18cfccb623c5195ed2fca015b92927b2e142cf8bf86f94dea27394da7c11"
          },
          "mnemonic": {
            "type": "string",
            "description": "Mnemonic phrase for the account.",
            "example": "word1 word2 word3 ..."
          },
          "createdAt": {
            "type": "number",
            "description": "Timestamp of profile creation (Unix timestamp in milliseconds).",
            "example": 1749108720000
          }
        }
      },
      "GetProfileResponse": {
        "type": "object",
        "properties": {
          "profileId": {
            "type": "string",
            "description": "Unique identifier of the profile, or null if not found.",
            "example": "JCeFE93PWqXz6UygdVTHAstRcR2MyrnehGsHgbrL7dt9N8WmP5m4"
          },
          "address": {
            "type": "string",
            "description": "Account address associated with the profile.",
            "example": "3wUT5V1yMX2YcBvn8NmxNz4yjQGh437FNnvbzN4sBM5bZafM"
          },
          "exists": {
            "type": "boolean",
            "description": "Indicates whether the profile exists.",
            "example": true
          },
          "cachedAt": {
            "type": "number",
            "description": "Timestamp when the profile was cached (Unix timestamp in milliseconds).",
            "example": 1749108720000
          },
          "source": {
            "type": "string",
            "enum": ["chain", "database", "cache"],
            "description": "Source of the profile data (chain, database, or cache).",
            "example": "chain"
          },
          "message": {
            "type": "string",
            "description": "Message indicating why the profile was not found (if applicable).",
            "example": "No profile found for this address in chain or database"
          }
        }
      },
      "CacheStatsResponse": {
        "type": "object",
        "properties": {
          "cacheHits": {
            "type": "integer",
            "description": "Number of cache hits for profile lookups.",
            "example": 100
          },
          "cacheMisses": {
            "type": "integer",
            "description": "Number of cache misses for profile lookups.",
            "example": 50
          },
          "totalRequests": {
            "type": "integer",
            "description": "Total number of profile lookup requests.",
            "example": 150
          },
          "hitRate": {
            "type": "string",
            "description": "Cache hit rate as a percentage.",
            "example": "66.67%"
          },
          "timestamp": {
            "type": "number",
            "description": "Timestamp of the cache stats (Unix timestamp in milliseconds).",
            "example": 1749108720000
          }
        }
      },
      "RegistryRequest": {
        "type": "object",
        "properties": {
          "schema": {
            "type": "object",
            "description": "Schema associated with the registry.",
            "properties": {
              "title": {
                "type": "string",
                "example": "test_schema"
              },
              "description": {
                "type": "string",
                "example": "test_schema"
              },
              "properties": {
                "type": "object",
                "description": "Properties of the schema.",
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "string"
                    }
                  }
                }
              },
              "required": {
                "type": "array",
                "description": "Required fields in the schema.",
                "items": {
                  "type": "string"
                },
                "example": ["name", "email"]
              }
            }
          },
          "address": {
            "type": "string",
            "description": "Issuer account address for the registry.",
            "example": "3wUT5V1yMX2YcBvn8NmxNz4yjQGh437FNnvbzN4sBM5bZafM"
          }
        },
        "required": ["schema", "address"]
      },
      "RegistryResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Indicates the registry creation was successful.",
            "example": "Registry created successfully"
          },
          "registryId": {
            "type": "string",
            "description": "Unique identifier of the created registry.",
            "example": "JCfANQxGJm8eoVrYD32TFEAfUkQjTeQMFdcdMreTtUvKgYnazeoV"
          },
          "schema": {
            "type": "object",
            "description": "Schema associated with the registry.",
            "properties": {
              "title": {
                "type": "string",
                "example": "test_schema"
              },
              "description": {
                "type": "string",
                "example": "test_schema"
              },
              "properties": {
                "type": "object",
                "description": "Properties of the schema.",
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "string"
                    }
                  }
                }
              },
              "required": {
                "type": "array",
                "description": "Required fields in the schema.",
                "items": {
                  "type": "string"
                },
                "example": ["name", "email"]
              }
            }
          }
        }
      },
      "GetRegistryResponse": {
        "type": "object",
        "properties": {
          "registryId": {
            "type": "string",
            "description": "Unique identifier of the registry.",
            "example": "JCfANQxGJm8eoVrYD32TFEAfUkQjTeQMFdcdMreTtUvKgYnazeoV"
          },
          "schema": {
            "type": "object",
            "description": "Schema associated with the registry.",
            "properties": {
              "title": {
                "type": "string",
                "example": "test_schema"
              },
              "description": {
                "type": "string",
                "example": "test_schema"
              },
              "properties": {
                "type": "object",
                "description": "Properties of the schema.",
                "additionalProperties": {
                  "type": "object",
                  "properties": {
                    "type": {
                      "type": "string",
                      "example": "string"
                    }
                  }
                }
              },
              "required": {
                "type": "array",
                "description": "Required fields in the schema.",
                "items": {
                  "type": "string"
                },
                "example": ["name", "email"]
              }
            }
          },
          "address": {
            "type": "string",
            "description": "Issuer account address.",
            "example": "3wUT5V1yMX2YcBvn8NmxNz4yjQGh437FNnvbzN4sBM5bZafM"
          },
          "profileId": {
            "type": "string",
            "description": "Profile ID associated with the registry.",
            "example": "JCeFE93PWqXz6UygdVTHAstRcR2MyrnehGsHgbrL7dt9N8WmP5m4"
          }
        }
      }
    }
  }
}
